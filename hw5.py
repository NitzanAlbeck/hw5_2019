import pandas as pd
from typing import Union
import numpy as np
import matplotlib.pyplot as plt
import pathlib

class QuestionnaireAnalysis:
    """
    Reads and analyzes data generated by the questionnaire experiment.
    Should be able to accept strings and pathlib.Path objects.
    """
    
    def __init__(self, data_fname: Union[pathlib.Path, str],data = '' ):
        if pathlib.Path(data_fname).is_file():
            self.data_fname = pathlib.Path(data_fname)
        else:
            raise ValueError 
        self.data = data

    def read_data(self):
        """
        Reads the json data located in self.data_fname into memory, to
        the attribute self.data.
        """
        self.data = pd.read_json(self.data_fname)
            
    def show_age_distrib(self):
        """
        Calculates and plots the age distribution of the participants.
        Returns a tuple containing two numpy arrays:
        The first item being the number of people in a given bin.
        The second item being the bin edges.
        """
        
        ages = self.data ['age']
        # ages = ages[~ages.isnull()]
        bin_edges = np.linspace (0,100,11)
        dist = np.histogram (ages,bins = bin_edges) # the lists required
        plt.hist(ages,bins = bin_edges) #ploting the hist
        plt.show ()
        return dist

    def remove_rows_without_mail(self):
        """
        Checks self.data for rows with invalid emails, and removes them.
        Returns the corrected DataFrame, i.e. the same table but with
        the erroneous rows removed and the (ordinal) index after a reset.
        """
        data_droped = self.data
        data_droped = self.data [self.data['email'].str.contains('@[a-zA-Z]+.c')]
        data_droped.reset_index(drop = True,inplace = True)
        return data_droped

    def fill_na_with_mean(self):
        """
        Finds, in the original DataFrame, the subjects that didn't answer
        all questions, and replaces that missing value with the mean of the
        other grades for that student. Returns the corrected DataFrame,
        as well as the row indices of the students that their new grades
        were generated.
        """
        # creating the list of indexs:
        # extract grades from df
        grades = self.data[['q1', 'q2', 'q3', 'q4', 'q5']]
        indexes =  list(np.where(grades.isna().any(axis = 1)))[0]

        # fill grades with column mean
        filled_grades = grades.fillna(grades.mean())

        # insert filled grades to another data frame
        filled_df = self.data
        filled_df[['q1', 'q2', 'q3', 'q4', 'q5']] = filled_grades

        return filled_df, indexes

        
if __name__ == '__main__':
    file_name = pathlib.Path('data.json')
    quest = QuestionnaireAnalysis(file_name)
    quest.read_data()
    quest.show_age_distrib()
    quest.remove_rows_without_mail()
    quest.fill_na_with_mean()

    
    